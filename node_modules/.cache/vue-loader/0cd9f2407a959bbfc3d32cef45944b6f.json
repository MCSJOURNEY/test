{"remainingRequest":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mcsjourneys/Desktop/startup-frontend-main/src/views/role/index.vue?vue&type=style&index=1&id=244c7f13&rel=stylesheet%2Fscss&lang=scss&scoped=true","dependencies":[{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/src/views/role/index.vue","mtime":1655109659000},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/css-loader/dist/cjs.js","mtime":1715598878831},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1715598879821},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/postcss-loader/src/index.js","mtime":1715598882466},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/sass-loader/dist/cjs.js","mtime":1715598879029},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/cache-loader/dist/cjs.js","mtime":1715598879413},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/vue-loader/lib/index.js","mtime":1715598879453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCjo6di1kZWVwIC5lbC1pbnB1dC1udW1iZXIgLmVsLWlucHV0X19pbm5lciB7CiAgdGV4dC1hbGlnbjogbGVmdDsKfQo6OnYtZGVlcCAudnVlLXRyZWVzZWxlY3RfX211bHRpLXZhbHVlIHsKICBtYXJnaW4tYm90dG9tOiAwOwp9Cjo6di1kZWVwIC52dWUtdHJlZXNlbGVjdF9fbXVsdGktdmFsdWUtaXRlbSB7CiAgYm9yZGVyOiAwOwogIHBhZGRpbmc6IDA7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/views/role","sourcesContent":["<template>\n  <div class=\"app-container\">\n    <!--工具栏-->\n    <div class=\"head-container\">\n      <!-- 搜索 -->\n      <el-input\n        v-model=\"roleName\"\n        size=\"small\"\n        clearable\n        placeholder=\"输入角色名称搜索\"\n        style=\"width: 200px\"\n        class=\"filter-item\"\n        @keyup.enter.native=\"doQuery\"\n      />\n      <el-date-picker\n        v-model=\"createTime\"\n        :default-time=\"['00:00:00', '23:59:59']\"\n        type=\"daterange\"\n        range-separator=\":\"\n        size=\"small\"\n        class=\"date-item\"\n        value-format=\"yyyy-MM-dd HH:mm:ss\"\n        start-placeholder=\"开始日期\"\n        end-placeholder=\"结束日期\"\n      />\n      <el-button\n        class=\"filter-item\"\n        size=\"mini\"\n        type=\"success\"\n        icon=\"el-icon-search\"\n        @click=\"doQuery\"\n      >搜索</el-button>\n      <el-button\n        class=\"filter-item\"\n        size=\"mini\"\n        type=\"primary\"\n        icon=\"el-icon-circle-plus-outline\"\n        @click=\"doAdd\"\n      >新增</el-button>\n      <el-button-group class=\"card-toggle-table\">\n        <el-tooltip\n          v-if=\"cardType\"\n          class=\"item\"\n          effect=\"dark\"\n          content=\"切换成表格\"\n          placement=\"top-start\"\n        >\n          <el-button size=\"mini\" plain icon=\"el-icon-s-grid\" @click=\"toggle\" />\n        </el-tooltip>\n        <el-tooltip\n          v-else\n          class=\"item\"\n          effect=\"dark\"\n          content=\"切换成卡片\"\n          placement=\"top-start\"\n        >\n          <el-button\n            size=\"mini\"\n            plain\n            icon=\"el-icon-bank-card\"\n            @click=\"toggle\"\n          />\n        </el-tooltip>\n      </el-button-group>\n    </div>\n    <!-- 表单渲染 -->\n    <el-dialog\n      append-to-body\n      :close-on-click-modal=\"false\"\n      :before-close=\"doBeforeClose\"\n      :visible.sync=\"showDialog\"\n      width=\"520px\"\n    >\n      <el-form\n        ref=\"form\"\n        :inline=\"true\"\n        :model=\"form\"\n        :rules=\"rules\"\n        size=\"small\"\n        label-width=\"80px\"\n      >\n        <el-form-item label=\"角色编码\" prop=\"roleCode\">\n          <el-input v-model=\"form.roleCode\" style=\"width: 380px\" />\n        </el-form-item>\n        <el-form-item label=\"角色名称\" prop=\"roleName\">\n          <el-input v-model=\"form.roleName\" style=\"width: 380px\" />\n        </el-form-item>\n        <el-form-item label=\"描述信息\" prop=\"description\">\n          <el-input\n            v-model=\"form.description\"\n            style=\"width: 380px\"\n            rows=\"5\"\n            type=\"textarea\"\n          />\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"text\" @click=\"doCancel\">取消</el-button>\n        <el-button\n          :loading=\"formLoading\"\n          type=\"primary\"\n          @click=\"doSubmit(form)\"\n        >确认</el-button>\n      </div>\n    </el-dialog>\n    <!-- 卡片风格 -->\n    <el-row v-if=\"cardType\">\n      <el-col\n        v-for=\"item in roles\"\n        :key=\"item.id\"\n        :span=\"5\"\n        style=\"margin-bottom: 10px\"\n        :offset=\"1\"\n      >\n        <el-card>\n          <div slot=\"header\" class=\"clearfix\">\n            <i class=\"el-icon-user\" /><span style=\"margin-left: 5px\">{{\n              item.roleName\n            }}</span>\n            <div\n              style=\"display: inline-block; float: right; cursor: pointer\"\n              @click=\"doEdit(item.id)\"\n            >\n              <el-tooltip effect=\"dark\" content=\"编辑角色\" placement=\"top\">\n                <i class=\"el-icon-edit-outline\" style=\"margin-left: 15px\" />\n              </el-tooltip>\n            </div>\n          </div>\n          <div>\n            <ul class=\"role-info\">\n              <li>\n                <div class=\"role-left\">描述信息：{{ item.description }}</div>\n              </li>\n              <li>\n                <div class=\"role-left\">\n                  创建时间：{{ parseTime(item.createTime) }}\n                </div>\n              </li>\n            </ul>\n          </div>\n          <div\n            style=\"display: inline-block; float: left; cursor: pointer\"\n            @click=\"doAssignPemission(item.id, item.roleName)\"\n          >\n            <el-tooltip effect=\"dark\" content=\"权限分配\" placement=\"bottom\">\n              <i class=\"el-icon-menu\" />\n            </el-tooltip>\n          </div>\n          <div\n            style=\"display: inline-block; float: right; cursor: pointer\"\n            @click=\"doDelete(item.id)\"\n          >\n            <el-tooltip effect=\"dark\" content=\"删除角色\" placement=\"bottom\">\n              <i class=\"el-icon-delete\" style=\"margin-left: 15px\" />\n            </el-tooltip>\n          </div>\n        </el-card>\n      </el-col>\n    </el-row>\n\n    <!-- 列表风格 -->\n    <el-table\n      v-else\n      ref=\"table\"\n      :data=\"roles\"\n      style=\"width: 100%; font-size: 12px\"\n      @selection-change=\"selectionChangeHandler\"\n    >\n      <el-table-column\n        :show-overflow-tooltip=\"true\"\n        width=\"150\"\n        prop=\"roleName\"\n        label=\"角色名称\"\n      />\n\n      <el-table-column\n        :show-overflow-tooltip=\"true\"\n        prop=\"createTime\"\n        width=\"155\"\n        label=\"创建时间\"\n      >\n        <template slot-scope=\"scope\">\n          <span>{{ parseTime(scope.row.createTime) }}</span>\n        </template>\n      </el-table-column>\n      <el-table-column prop=\"description\" label=\"描述信息\" />\n      <el-table-column label=\"操作\" width=\"300\" align=\"center\" fixed=\"right\">\n        <template slot-scope=\"scope\">\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            round\n            @click=\"doEdit(scope.row.id)\"\n          >编辑角色</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            round\n            @click=\"doDelete(scope.row.id)\"\n          >删除角色</el-button>\n          <el-button\n            size=\"mini\"\n            type=\"text\"\n            round\n            @click=\"doAssignPemission(scope.row.id,scope.row.roleName)\"\n          >分配权限</el-button>\n        </template>\n      </el-table-column>\n    </el-table>\n    <!-- 分配权限表单 -->\n    <el-dialog\n      append-to-body\n      :close-on-click-modal=\"false\"\n      :visible.sync=\"showPermissionDialog\"\n      :title=\"permission.roleName\"\n      width=\"520px\"\n    >\n      <treeselect\n        v-model=\"permission.menus\"\n        :options=\"menuTree\"\n        :show-count=\"true\"\n        style=\"width: 480px\"\n        :multiple=\"true\"\n        :sort-value-by=\"sortValueBy\"\n        :value-consists-of=\"valueConsistsOf\"\n        :default-expand-level=\"1\"\n        placeholder=\"请选择或搜索菜单进行权限分配\"\n      />\n\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button type=\"text\" @click=\"doPemissionCancel\">取消</el-button>\n        <el-button\n          type=\"primary\"\n          @click=\"doSubmitPemission(permission)\"\n        >确认</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nimport { parseTime } from '@/utils/index'\nimport { getRoleList, getRole, saveRole, deleteRole, getPermission, savePermission } from '@/api/role'\nimport { getMenuList } from '@/api/menu'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nexport default {\n  name: '角色管理',\n  components: { Treeselect },\n  data() {\n    return {\n      showDialog: false,\n      loading: false,\n      cardType: true,\n      formLoading: true,\n      form: {},\n      roles: [],\n      roleName: '',\n      createTime: null,\n      rules: {\n        roleCode: [\n          { required: true, message: '请输入角色编码', trigger: 'blur' }\n        ],\n        roleName: [\n          { required: true, message: '请输入角色名称', trigger: 'blur' }\n        ]\n      },\n      showPermissionDialog: false,\n      permission: {},\n      menuTree: [],\n      valueConsistsOf: 'ALL_WITH_INDETERMINATE',\n      sortValueBy: 'INDEX'\n    }\n  },\n  created() {\n\n  },\n  methods: {\n    parseTime,\n    doQuery() {\n      var param = { roleName: this.roleName }\n      if (this.createTime != null) {\n        param.createTimeStart = Date.parse(this.createTime[0])\n        param.createTimeEnd = Date.parse(this.createTime[1])\n      }\n      getRoleList(param).then(res => {\n        if (res) {\n          this.roles = res\n        }\n      })\n    },\n    doAdd() {\n      this.showDialog = true\n      this.formLoading = false\n      this.form = {}\n    },\n    doEdit(id) {\n      this.showDialog = true\n      getRole(id).then(res => {\n        if (res) {\n          this.form = res\n          this.formLoading = false\n        }\n      })\n    },\n    doCancel() {\n      this.showDialog = false\n      this.formLoading = true\n      this.form = {}\n    },\n    doSubmit(role) {\n      this.$refs.form.validate(valid => {\n        if (valid) {\n          this.formLoading = true\n          saveRole(role).then(res => {\n            if (res) {\n              this.showDialog = false\n              this.$notify({\n                title: '保存成功',\n                type: 'success',\n                duration: 2500\n              })\n              this.doQuery()\n            }\n          }).catch(() => {\n            this.formLoading = false\n          })\n        }\n      })\n    },\n    doDelete(id) {\n      this.$confirm(`确认删除此条数据?`, '提示', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() =>\n        deleteRole([id]).then(res => {\n          if (res) {\n            this.$notify({\n              title: '删除成功',\n              type: 'success',\n              duration: 2500\n            })\n            this.doQuery()\n          }\n        })\n      ).catch(() => {\n      })\n    },\n    doBeforeClose() {\n      this.showDialog = true\n    },\n    doAssignPemission(roleId, roleName) {\n      var param = { name: '' }\n      getMenuList(param).then(res => {\n        if (res) {\n          this.menuTree = this.ArrayToTreeData(res)\n          getPermission(roleId).then(res => {\n            if (res) {\n              const menus = []\n              res.forEach(element => {\n                menus.push(element.menuId)\n              })\n              this.permission = { roleId: roleId, roleName: roleName, menus: menus }\n              this.showPermissionDialog = true\n            }\n          })\n        }\n      })\n    },\n    doPemissionCancel() {\n      this.showPermissionDialog = false\n      this.permission = {}\n    },\n    doSubmitPemission(permission) {\n      console.log(permission)\n      savePermission(permission.roleId, permission.menus).then(res => {\n        if (res) {\n          this.showPermissionDialog = false\n          this.$notify({\n            title: '配置权限成功',\n            type: 'success',\n            duration: 2500\n          })\n        }\n      })\n    },\n    ArrayToTreeData(data) {\n      const cloneData = JSON.parse(JSON.stringify(data)) // 对源数据深度克隆\n      return cloneData.filter(father => {\n        const branchArr = cloneData.filter(child => father.id === child.pid) // 返回每一项的子级数组\n        branchArr.length > 0 ? father.children = branchArr : '' // 如果存在子级，则给父级添加一个children属性，并赋值\n        const parentArr = cloneData.filter(parent => parent.id === father.pid) // 判断该菜单的父级菜单是否存在\n        if (parentArr.length === 0) { return father } // 如果该菜单的父级菜单不存在，则直接返回该菜单\n        return father.pid === null // 返回第一层\n      })\n    },\n    toggle() {\n      this.cardType = !this.cardType\n    }\n\n  }\n}\n\n</script>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\">\n.role-span {\n  font-weight: bold;\n  color: #303133;\n  font-size: 15px;\n}\n.role-info {\n  margin-top: 0;\n  padding-top: 0;\n  padding-left: 0;\n  list-style: none;\n  li {\n    border-bottom: 1px solid #f0f3f4;\n    padding: 11px 0;\n    font-size: 12px;\n  }\n  .role-left {\n    color: rgb(148, 137, 137);\n    overflow: hidden;\n    white-space: nowrap;\n    text-align: left;\n    text-overflow: ellipsis;\n  }\n\n  .line {\n    width: 100%;\n    height: 1px;\n    border-top: 1px solid #ccc;\n  }\n}\n\n.card-toggle-table {\n  padding: 4px 0;\n  display: -webkit-flex;\n  display: flex;\n  float: right;\n  align-items: center;\n  margin-left: auto;\n}\n</style>\n\n<style rel=\"stylesheet/scss\" lang=\"scss\" scoped>\n::v-deep .el-input-number .el-input__inner {\n  text-align: left;\n}\n::v-deep .vue-treeselect__multi-value {\n  margin-bottom: 0;\n}\n::v-deep .vue-treeselect__multi-value-item {\n  border: 0;\n  padding: 0;\n}\n</style>\n"]}]}
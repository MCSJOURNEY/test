{"remainingRequest":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/mcsjourneys/Desktop/startup-frontend-main/src/layout/components/Tabbar.vue?vue&type=style&index=0&id=336a73cb&lang=scss&scoped=true","dependencies":[{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/src/layout/components/Tabbar.vue","mtime":1655109659000},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/css-loader/dist/cjs.js","mtime":1715598878831},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1715598879821},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/postcss-loader/src/index.js","mtime":1715598882466},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/sass-loader/dist/cjs.js","mtime":1715598879029},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/cache-loader/dist/cjs.js","mtime":1715598879413},{"path":"/Users/mcsjourneys/Desktop/startup-frontend-main/node_modules/vue-loader/lib/index.js","mtime":1715598879453}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLnRhYmJhci1jb250YWluZXIgewogIGhlaWdodDogMzRweDsKICB3aWR0aDogMTAwJTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCg=="},{"version":3,"sources":["Tabbar.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0FA;AACA;AACA;AACA;AACA","file":"Tabbar.vue","sourceRoot":"src/layout/components","sourcesContent":["<template>\n  <div class=\"tabbar-container\">\n    <el-tabs v-model=\"pageCurrent\" type=\"card\" closable @tab-click=\"tabChange\" @tab-remove=\"removeTab\">\n      <el-tab-pane\n        v-for=\"(item) in pageList\"\n        :key=\"item.name\"\n        :name=\"item.name\"\n        class=\"tabbar-item\"\n      >\n        <span slot=\"label\">\n          <span><i :class=\"item.icon\" />{{ }} {{ item.label }}</span>\n        </span>\n      </el-tab-pane>\n    </el-tabs>\n\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      pageCurrent: '',\n      pageList: [],\n      exclude: null,\n      condition: true\n    }\n  },\n  watch: {\n    $route: {\n      handler(to, form = null) {\n        // 当路由改变时，检测该路由是否已经在打开的页面之中，如果不在，就添加进去\n        if (to.meta) {\n          this.pageCurrent = to.path\n          var index = this.pageList.findIndex(value => {\n            return value.name === to.path\n          })\n          if (index < 0) {\n            this.pageList.push({ name: to.path, label: to.meta.title, icon: to.meta.icon })\n          }\n          // 缓存页面\n          const { name, meta } = this.$route\n          if (name && meta !== undefined && meta.noCache !== undefined && !meta.noCache) {\n            this.$store.dispatch('tabbar/addCachedView', this.$route)\n          }\n        }\n      },\n      immediate: true\n    }\n  },\n\n  methods: {\n    removeTab(targetName) {\n      if (targetName === '/dashboard') return\n      const tabs = this.pageList\n      let activeName = this.pageCurrent\n      if (activeName === targetName) {\n        tabs.forEach((tab, index) => {\n          if (tab.name === targetName) {\n            const nextTab = tabs[index + 1] || tabs[index - 1]\n            if (nextTab) {\n              activeName = nextTab.name\n            }\n          }\n        })\n      }\n      this.pageCurrent = activeName\n\n      this.pageList = tabs.filter(tab => tab.name !== targetName)\n      // 去除缓存页面\n      this.$store.dispatch('tabbar/delCachedView', this.$route)\n      this.$router.push({ path: activeName })\n    },\n    tabChange(tab, event) {\n      this.$router.push({ path: tab.name })\n    },\n    refreshModule() {\n      this.exclude = this.$refs.view.$options.name\n      this.condition = !this.condition\n      this.$nextTick(_ => {\n        this.exclude = null\n        this.condition = !this.condition\n      })\n    }\n\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.tabbar-container {\n  height: 34px;\n  width: 100%;\n  cursor: pointer;\n}\n\n</style>\n"]}]}